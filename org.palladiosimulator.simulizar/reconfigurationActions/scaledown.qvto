/*
 * This simple QVTO transformation implements the ScaleDown reconfiguration action for the ZNN.COM example. 
 * It simply changes the values of the branch probability in the LoadBalancer RDSEFF.
 *
 */

modeltype PCM_ALLOC uses 'http://palladiosimulator.org/PalladioComponentModel/Allocation/5.0';
modeltype PCM_REP uses 'http://palladiosimulator.org/PalladioComponentModel/Repository/5.0';
modeltype PCM_SEFF uses 'http://palladiosimulator.org/PalladioComponentModel/SEFF/5.0';
modeltype PCM_SYS uses 'http://palladiosimulator.org/PalladioComponentModel/System/5.0';

transformation ScaleDown(		
							inout pcmAllocation : PCM_ALLOC, 
							inout pcmRep : PCM_REP, 
							inout pcmSystem : PCM_SYS ) {
		
		main() {
		
			assert fatal(pcmAllocation.rootObjects()[Allocation]->size() > 0)
			with log ("Allocation Model is empty!");
			
			var basicComponents := pcmAllocation.rootObjects()[Allocation].allocationContexts_Allocation.assemblyContext_AllocationContext.encapsulatedComponent__AssemblyContext[BasicComponent];
			var loadBalancer := basicComponents->select(c | c.entityName = "LoadBalancer")->any(true);
			
			var prob := loadBalancer.serviceEffectSpecifications__BasicComponent[ResourceDemandingBehaviour]->any(true).steps_Behaviour[BranchAction]->any(true).branches_Branch[ProbabilisticBranchTransition];
			
			var numActiveServers = (5 - prob->select(p | p.branchProbability = 0.0)->size());
			
			if (numActiveServers > 1) then 
			{
				var newValue := (1 / (numActiveServers - 1));
				var counter := numActiveServers - 1 ;
				prob->asOrderedSet()->forEach(p) {
					if (counter > 0) then {
						p.branchProbability := newValue; 
					} else {
						p.branchProbability := 0.0; 
					} endif;
					counter := counter - 1;
					
				}
			}
			endif;
			
		}					
								
	}