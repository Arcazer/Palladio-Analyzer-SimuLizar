/*
 * This simple QVTO transformation adds 50 CPU demand to the Reconfigurator component 
 * in the ZNN.COM model example. 
 *
 */

modeltype PCM_ALLOC uses 'http://palladiosimulator.org/PalladioComponentModel/Allocation/5.0';
modeltype PCM_REP uses 'http://palladiosimulator.org/PalladioComponentModel/Repository/5.0';
modeltype PCM_SEFF uses 'http://palladiosimulator.org/PalladioComponentModel/SEFF/5.0';
modeltype PCM_SYS uses 'http://palladiosimulator.org/PalladioComponentModel/System/5.0';
modeltype PCM_STOEX uses 'http://sdq.ipd.uka.de/StochasticExpressions/2.2';


transformation AddDemand(		
							inout pcmAllocation : PCM_ALLOC, 
							inout pcmRep : PCM_REP, 
							inout pcmSystem : PCM_SYS ) {
								
		main() {
		
			assert fatal(pcmAllocation.rootObjects()[Allocation]->size() > 0)
			with log ("Allocation Model is empty!");
			
			var basicComponents := pcmAllocation.rootObjects()[Allocation].allocationContexts_Allocation.assemblyContext_AllocationContext.encapsulatedComponent__AssemblyContext[BasicComponent];
			var reconfigurator := basicComponents->select(c | c.entityName = "Reconfigurator")->any(true);
			
			//log ("Adding Demand");
			var resDemand := reconfigurator.serviceEffectSpecifications__BasicComponent[ResourceDemandingBehaviour].steps_Behaviour[AbstractInternalControlFlowAction].resourceDemand_Action.specification_ParametericResourceDemand->any(true);
			
			//log ("Spec before: " + resDemand.specification);
			
			resDemand.specification := (resDemand.specification.toInteger() + 50).toString();
			//log ("Spec: " + resDemand.specification);
			
			resDemand.expression[IntLiteral]->any(true).value := resDemand.specification.toInteger();
			//log ("Expr: " + resDemand.expression.toString());
			
		}					
								
	}