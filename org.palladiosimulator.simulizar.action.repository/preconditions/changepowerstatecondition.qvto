import org.palladiosimulator.simulizar.action.repository.black.ProfilesLibrary;

modeltype INFRASTRUCTURE uses 'http://www.fzi.de/Power/Infrastructure/1.0';
modeltype POWER_BINDING uses 'http://www.fzi.de/Power/Binding/1.0';
modeltype ACTION_MAPPING uses 'http://simulizar.palladiosimulator.org/Actions/Mapping/1.0';
modeltype ACTION_CORE uses 'http://simulizar.palladiosimulator.org/Actions/Core/1.0';
modeltype ACTION_INSTANCE uses 'http://simulizar.palladiosimulator.org/Actions/Instance/1.0';

transformation checkPreconditions(
							inout powerInfrastructure : INFRASTRUCTURE,
							in actionRoleSet : ACTION_INSTANCE,
							in actionStep : ACTION_CORE
							) {
							
property affectedResourceRoleId : String = '_AfvooYn0EeWm8ose-zjfHg';
property desiredPowerStateRoleId : String = '_P-SaQYn0EeWm8ose-zjfHg';

	/**
	 * The main transformation.
	 * This is the entry point to the overall transformation.
	 */
	main() {	
		var roleSet := actionRoleSet.objectsOfType(RoleSet)->any(true);
		var statefulPowerConsumingResources := powerInfrastructure.objectsOfType(StatefulPowerConsumingResource);
		var affectedStatefulResource := roleSet.roles[roleType.id = affectedResourceRoleId]->any(true).value.oclAsType(StatefulPowerConsumingResource);
		var desiredPowerState := roleSet.roles[roleType.id = desiredPowerStateRoleId]->any(true).value.oclAsType(PowerState);

		assert fatal (not desiredPowerState.oclIsUndefined())
			with log('Something went wrong: Given role set does not specify the desired power state.');
		assert fatal ((not affectedStatefulResource.oclIsUndefined()) and statefulPowerConsumingResources->includes(affectedStatefulResource))
			with log('Something went wrong: Given infrastructure repository does not contain'  
			+ ' the StatefulPowerConsumingResource wich is affected by this action.');
			
		var associatedResourceContainer := affectedStatefulResource.processingResourceSpecification.resourceContainer_ProcessingResourceSpecification;
	}
}
