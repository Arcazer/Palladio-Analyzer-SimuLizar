/**
 */
package eurema.provider;

import eurema.util.EuremaAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class EuremaItemProviderAdapterFactory extends EuremaAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EuremaItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link eurema.Megamodel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MegamodelItemProvider megamodelItemProvider;

	/**
	 * This creates an adapter for a {@link eurema.Megamodel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMegamodelAdapter() {
		if (megamodelItemProvider == null) {
			megamodelItemProvider = new MegamodelItemProvider(this);
		}

		return megamodelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link eurema.InitialOperation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InitialOperationItemProvider initialOperationItemProvider;

	/**
	 * This creates an adapter for a {@link eurema.InitialOperation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInitialOperationAdapter() {
		if (initialOperationItemProvider == null) {
			initialOperationItemProvider = new InitialOperationItemProvider(this);
		}

		return initialOperationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link eurema.DecisionOperation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DecisionOperationItemProvider decisionOperationItemProvider;

	/**
	 * This creates an adapter for a {@link eurema.DecisionOperation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDecisionOperationAdapter() {
		if (decisionOperationItemProvider == null) {
			decisionOperationItemProvider = new DecisionOperationItemProvider(this);
		}

		return decisionOperationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link eurema.FinalOperation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FinalOperationItemProvider finalOperationItemProvider;

	/**
	 * This creates an adapter for a {@link eurema.FinalOperation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFinalOperationAdapter() {
		if (finalOperationItemProvider == null) {
			finalOperationItemProvider = new FinalOperationItemProvider(this);
		}

		return finalOperationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link eurema.MegamodelCall} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MegamodelCallItemProvider megamodelCallItemProvider;

	/**
	 * This creates an adapter for a {@link eurema.MegamodelCall}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMegamodelCallAdapter() {
		if (megamodelCallItemProvider == null) {
			megamodelCallItemProvider = new MegamodelCallItemProvider(this);
		}

		return megamodelCallItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link eurema.ModelOperation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModelOperationItemProvider modelOperationItemProvider;

	/**
	 * This creates an adapter for a {@link eurema.ModelOperation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createModelOperationAdapter() {
		if (modelOperationItemProvider == null) {
			modelOperationItemProvider = new ModelOperationItemProvider(this);
		}

		return modelOperationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link eurema.SoftwareModule} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SoftwareModuleItemProvider softwareModuleItemProvider;

	/**
	 * This creates an adapter for a {@link eurema.SoftwareModule}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSoftwareModuleAdapter() {
		if (softwareModuleItemProvider == null) {
			softwareModuleItemProvider = new SoftwareModuleItemProvider(this);
		}

		return softwareModuleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link eurema.RuntimeModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RuntimeModelItemProvider runtimeModelItemProvider;

	/**
	 * This creates an adapter for a {@link eurema.RuntimeModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRuntimeModelAdapter() {
		if (runtimeModelItemProvider == null) {
			runtimeModelItemProvider = new RuntimeModelItemProvider(this);
		}

		return runtimeModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link eurema.MegamodelProxy} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MegamodelProxyItemProvider megamodelProxyItemProvider;

	/**
	 * This creates an adapter for a {@link eurema.MegamodelProxy}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMegamodelProxyAdapter() {
		if (megamodelProxyItemProvider == null) {
			megamodelProxyItemProvider = new MegamodelProxyItemProvider(this);
		}

		return megamodelProxyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link eurema.Input} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InputItemProvider inputItemProvider;

	/**
	 * This creates an adapter for a {@link eurema.Input}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInputAdapter() {
		if (inputItemProvider == null) {
			inputItemProvider = new InputItemProvider(this);
		}

		return inputItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link eurema.Output} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OutputItemProvider outputItemProvider;

	/**
	 * This creates an adapter for a {@link eurema.Output}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOutputAdapter() {
		if (outputItemProvider == null) {
			outputItemProvider = new OutputItemProvider(this);
		}

		return outputItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link eurema.Transition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TransitionItemProvider transitionItemProvider;

	/**
	 * This creates an adapter for a {@link eurema.Transition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTransitionAdapter() {
		if (transitionItemProvider == null) {
			transitionItemProvider = new TransitionItemProvider(this);
		}

		return transitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link eurema.Condition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConditionItemProvider conditionItemProvider;

	/**
	 * This creates an adapter for a {@link eurema.Condition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConditionAdapter() {
		if (conditionItemProvider == null) {
			conditionItemProvider = new ConditionItemProvider(this);
		}

		return conditionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link eurema.ExecutionContext} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExecutionContextItemProvider executionContextItemProvider;

	/**
	 * This creates an adapter for a {@link eurema.ExecutionContext}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExecutionContextAdapter() {
		if (executionContextItemProvider == null) {
			executionContextItemProvider = new ExecutionContextItemProvider(this);
		}

		return executionContextItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link eurema.ExecutionInformation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExecutionInformationItemProvider executionInformationItemProvider;

	/**
	 * This creates an adapter for a {@link eurema.ExecutionInformation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExecutionInformationAdapter() {
		if (executionInformationItemProvider == null) {
			executionInformationItemProvider = new ExecutionInformationItemProvider(this);
		}

		return executionInformationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link eurema.Sensing} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SensingItemProvider sensingItemProvider;

	/**
	 * This creates an adapter for a {@link eurema.Sensing}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSensingAdapter() {
		if (sensingItemProvider == null) {
			sensingItemProvider = new SensingItemProvider(this);
		}

		return sensingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link eurema.Effecting} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EffectingItemProvider effectingItemProvider;

	/**
	 * This creates an adapter for a {@link eurema.Effecting}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEffectingAdapter() {
		if (effectingItemProvider == null) {
			effectingItemProvider = new EffectingItemProvider(this);
		}

		return effectingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link eurema.RuntimeEnvironment} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RuntimeEnvironmentItemProvider runtimeEnvironmentItemProvider;

	/**
	 * This creates an adapter for a {@link eurema.RuntimeEnvironment}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRuntimeEnvironmentAdapter() {
		if (runtimeEnvironmentItemProvider == null) {
			runtimeEnvironmentItemProvider = new RuntimeEnvironmentItemProvider(this);
		}

		return runtimeEnvironmentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link eurema.Layer} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LayerItemProvider layerItemProvider;

	/**
	 * This creates an adapter for a {@link eurema.Layer}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLayerAdapter() {
		if (layerItemProvider == null) {
			layerItemProvider = new LayerItemProvider(this);
		}

		return layerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link eurema.Event} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EventItemProvider eventItemProvider;

	/**
	 * This creates an adapter for a {@link eurema.Event}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEventAdapter() {
		if (eventItemProvider == null) {
			eventItemProvider = new EventItemProvider(this);
		}

		return eventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link eurema.MegamodelModuleTrigger} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MegamodelModuleTriggerItemProvider megamodelModuleTriggerItemProvider;

	/**
	 * This creates an adapter for a {@link eurema.MegamodelModuleTrigger}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMegamodelModuleTriggerAdapter() {
		if (megamodelModuleTriggerItemProvider == null) {
			megamodelModuleTriggerItemProvider = new MegamodelModuleTriggerItemProvider(this);
		}

		return megamodelModuleTriggerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link eurema.SoftwareModuleTrigger} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SoftwareModuleTriggerItemProvider softwareModuleTriggerItemProvider;

	/**
	 * This creates an adapter for a {@link eurema.SoftwareModuleTrigger}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSoftwareModuleTriggerAdapter() {
		if (softwareModuleTriggerItemProvider == null) {
			softwareModuleTriggerItemProvider = new SoftwareModuleTriggerItemProvider(this);
		}

		return softwareModuleTriggerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link eurema.ModelResource} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModelResourceItemProvider modelResourceItemProvider;

	/**
	 * This creates an adapter for a {@link eurema.ModelResource}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createModelResourceAdapter() {
		if (modelResourceItemProvider == null) {
			modelResourceItemProvider = new ModelResourceItemProvider(this);
		}

		return modelResourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link eurema.EventType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EventTypeItemProvider eventTypeItemProvider;

	/**
	 * This creates an adapter for a {@link eurema.EventType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEventTypeAdapter() {
		if (eventTypeItemProvider == null) {
			eventTypeItemProvider = new EventTypeItemProvider(this);
		}

		return eventTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link eurema.Architecture} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArchitectureItemProvider architectureItemProvider;

	/**
	 * This creates an adapter for a {@link eurema.Architecture}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArchitectureAdapter() {
		if (architectureItemProvider == null) {
			architectureItemProvider = new ArchitectureItemProvider(this);
		}

		return architectureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link eurema.MegamodelModule} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MegamodelModuleItemProvider megamodelModuleItemProvider;

	/**
	 * This creates an adapter for a {@link eurema.MegamodelModule}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMegamodelModuleAdapter() {
		if (megamodelModuleItemProvider == null) {
			megamodelModuleItemProvider = new MegamodelModuleItemProvider(this);
		}

		return megamodelModuleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link eurema.Software} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SoftwareItemProvider softwareItemProvider;

	/**
	 * This creates an adapter for a {@link eurema.Software}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSoftwareAdapter() {
		if (softwareItemProvider == null) {
			softwareItemProvider = new SoftwareItemProvider(this);
		}

		return softwareItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link eurema.Entry} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EntryItemProvider entryItemProvider;

	/**
	 * This creates an adapter for a {@link eurema.Entry}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEntryAdapter() {
		if (entryItemProvider == null) {
			entryItemProvider = new EntryItemProvider(this);
		}

		return entryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link eurema.Exit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExitItemProvider exitItemProvider;

	/**
	 * This creates an adapter for a {@link eurema.Exit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExitAdapter() {
		if (exitItemProvider == null) {
			exitItemProvider = new ExitItemProvider(this);
		}

		return exitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link eurema.Repository} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RepositoryItemProvider repositoryItemProvider;

	/**
	 * This creates an adapter for a {@link eurema.Repository}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRepositoryAdapter() {
		if (repositoryItemProvider == null) {
			repositoryItemProvider = new RepositoryItemProvider(this);
		}

		return repositoryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link eurema.ModelResourceSet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModelResourceSetItemProvider modelResourceSetItemProvider;

	/**
	 * This creates an adapter for a {@link eurema.ModelResourceSet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createModelResourceSetAdapter() {
		if (modelResourceSetItemProvider == null) {
			modelResourceSetItemProvider = new ModelResourceSetItemProvider(this);
		}

		return modelResourceSetItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (megamodelItemProvider != null) megamodelItemProvider.dispose();
		if (initialOperationItemProvider != null) initialOperationItemProvider.dispose();
		if (decisionOperationItemProvider != null) decisionOperationItemProvider.dispose();
		if (finalOperationItemProvider != null) finalOperationItemProvider.dispose();
		if (megamodelCallItemProvider != null) megamodelCallItemProvider.dispose();
		if (modelOperationItemProvider != null) modelOperationItemProvider.dispose();
		if (softwareModuleItemProvider != null) softwareModuleItemProvider.dispose();
		if (runtimeModelItemProvider != null) runtimeModelItemProvider.dispose();
		if (megamodelProxyItemProvider != null) megamodelProxyItemProvider.dispose();
		if (inputItemProvider != null) inputItemProvider.dispose();
		if (outputItemProvider != null) outputItemProvider.dispose();
		if (transitionItemProvider != null) transitionItemProvider.dispose();
		if (conditionItemProvider != null) conditionItemProvider.dispose();
		if (executionContextItemProvider != null) executionContextItemProvider.dispose();
		if (executionInformationItemProvider != null) executionInformationItemProvider.dispose();
		if (sensingItemProvider != null) sensingItemProvider.dispose();
		if (effectingItemProvider != null) effectingItemProvider.dispose();
		if (runtimeEnvironmentItemProvider != null) runtimeEnvironmentItemProvider.dispose();
		if (layerItemProvider != null) layerItemProvider.dispose();
		if (eventItemProvider != null) eventItemProvider.dispose();
		if (megamodelModuleTriggerItemProvider != null) megamodelModuleTriggerItemProvider.dispose();
		if (softwareModuleTriggerItemProvider != null) softwareModuleTriggerItemProvider.dispose();
		if (modelResourceItemProvider != null) modelResourceItemProvider.dispose();
		if (eventTypeItemProvider != null) eventTypeItemProvider.dispose();
		if (architectureItemProvider != null) architectureItemProvider.dispose();
		if (megamodelModuleItemProvider != null) megamodelModuleItemProvider.dispose();
		if (softwareItemProvider != null) softwareItemProvider.dispose();
		if (entryItemProvider != null) entryItemProvider.dispose();
		if (exitItemProvider != null) exitItemProvider.dispose();
		if (repositoryItemProvider != null) repositoryItemProvider.dispose();
		if (modelResourceSetItemProvider != null) modelResourceSetItemProvider.dispose();
	}

}
