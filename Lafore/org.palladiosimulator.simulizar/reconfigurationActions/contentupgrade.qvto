/*
 * This simple QVTO reconfiguration rule operates on the ZNN.COM example. 
 * The model for this case is in the plugin org.palladiosimulator.simulizar.lafore.mapeloop.example.znn 
 * The transformation changes the content type of the news service  to textual.
 *
 */

modeltype PCM_ALLOC uses 'http://palladiosimulator.org/PalladioComponentModel/Allocation/5.0';
modeltype PCM_REP uses 'http://palladiosimulator.org/PalladioComponentModel/Repository/5.0';
modeltype PCM_SEFF uses 'http://palladiosimulator.org/PalladioComponentModel/SEFF/5.0';
modeltype PCM_SYS uses 'http://palladiosimulator.org/PalladioComponentModel/System/5.0';


transformation ContentUpgrade(		
							inout pcmAllocation : PCM_ALLOC, 
							inout pcmRep : PCM_REP, 
							inout pcmSystem : PCM_SYS ) {
								
		main() {
			assert fatal(pcmAllocation.rootObjects()[Allocation]->size() > 0)
			with log ("Allocation Model is empty!");
			
			var basicComponents := pcmAllocation.rootObjects()[Allocation].allocationContexts_Allocation.assemblyContext_AllocationContext.encapsulatedComponent__AssemblyContext[BasicComponent];
			var loadBalancer := basicComponents->select(c | c.entityName = "LoadBalancer")->any(true);
			
			var prob1 := loadBalancer.serviceEffectSpecifications__BasicComponent[ResourceDemandingBehaviour]->any(true).steps_Behaviour[BranchAction]->any(true).branches_Branch[ProbabilisticBranchTransition];
	
			var servers := basicComponents->select(c | c.entityName = "NewsService");
			var prob2 := servers.serviceEffectSpecifications__BasicComponent[ResourceDemandingBehaviour]->any(true).steps_Behaviour[BranchAction]->any(true).branches_Branch[ProbabilisticBranchTransition];
			
			prob2->select(c | c.entityName = "selectMultimedia")->any(true).branchProbability := 1.0;
			prob2->select(c | c.entityName = "selectTextual")->any(true).branchProbability := 0.0;


		}					
								
	}